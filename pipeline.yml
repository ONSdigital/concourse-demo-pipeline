resource_types:
- name: concourse-git-semver-tag
  type: docker-image
  source:
    repository: laurentverbruggen/concourse-git-semver-tag-resource

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: artifactory
  type: docker-image
  source:
    repository: pivotalservices/artifactory-resource

resources:
- name: concourse-demo-acceptance-tests
  type: git
  source: {uri: "https://github.com/ONSdigital/concourse-demo-acceptance-tests"}

- name: concourse-demo-python-service
  type: git
  source: {uri: "https://github.com/ONSdigital/concourse-demo-python-service"}

- name: concourse-demo-java-service
  type: git
  source: {uri: "https://github.com/ONSdigital/concourse-demo-java-service"}

- name: concourse-demo-preprod-deploy-trigger
  type: git
  source:
    uri: "https://github.com/ONSdigital/concourse-demo-deploy-trigger"
    paths: ["preprod/*"]

- name: concourse-demo-prod-deploy-trigger
  type: git
  source:
    uri: "https://github.com/ONSdigital/concourse-demo-deploy-trigger"
    paths: ["prod/*"]

- name: concourse-demo-python-tag
  type: concourse-git-semver-tag
  source:
    uri: https://github.com/ONSdigital/concourse-demo-python-service
    username: ((github_username))
    password: ((github_password))
    branch: master

- name: concourse-demo-java-tag
  type: concourse-git-semver-tag
  source:
    uri: https://github.com/ONSdigital/concourse-demo-java-service
    username: ((github_username))
    password: ((github_password))
    branch: master

- name: cf-resource-ci
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: ci
    skip_cert_check: true

- name: cf-resource-int
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: int
    skip_cert_check: true

- name: cf-resource-sit
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: sit
    skip_cert_check: true

- name: cf-resource-cat
  type: cf
  source:
    api: ((cloudfoundry_api))
    username: ((cloudfoundry_email))
    password: ((cloudfoundry_password))
    organization: rmras
    space: cat
    skip_cert_check: true

- name: notify
  type: slack-notification
  source:
    url: ((slack-webhook))

- name: file-repository
  type: artifactory
  source:
    endpoint: http://artifactory.rmdev.onsdigital.uk/artifactory
    repository: "/libs-release-local/uk/gov/ons/ctp/product/"
    regex: "concourse_demo_service-(?<version>.*).jar"
    username: ((artifactory_username))
    password: ((artifactory_password))
    skip_ssl_verification: true

jobs:
- name: python-unit-tests
  plan: 
  - get: concourse-demo-python-service
    trigger: true
  - task: run-unit-tests
    file: concourse-demo-python-service/ci/task.yml

- name: java-unit-tests
  plan:
  - get: concourse-demo-java-service
    trigger: true
  - task: run-unit-tests
    file: concourse-demo-java-service/ci/task.yml

- name: deploy-python-demo-ci
  serial_groups: [acceptance_tests]
  plan:
  - get: concourse-demo-python-service
    trigger: true
    passed: [python-unit-tests]
  - put: cf-resource-ci
    params:
      manifest: concourse-demo-python-service/manifest.yml
      path: concourse-demo-python-service
      current_app_name: concourse-demo-python-service-ci

- name: deploy-java-demo-ci
  serial_groups: [acceptance_tests]
  plan:
  - get: concourse-demo-java-service
    trigger: true
    passed: [java-unit-tests]
  - task: run-build
    file: concourse-demo-java-service/ci/task.yml
  - put: cf-resource-ci
    params:
      manifest: concourse-demo-java-service/manifest.yml
      path: artifacts/*.jar
      current_app_name: concourse-demo-java-service-ci

- name: acceptance-tests
  serial_groups: [acceptance_tests]
  plan:
  - get: concourse-demo-acceptance-tests
    trigger: true
  - get: concourse-demo-python-service
    passed: [deploy-python-demo-ci]
    trigger: true
  - get: concourse-demo-java-service
    passed: [deploy-java-demo-ci]
    trigger: true
  - task: run-acceptance-tests
    on_failure:
      put: notify
      params:
        text: "Acceptance test failed"
    config:
      platform: linux
      image_resource:
        type: docker-image
        source:
          repository: kennethreitz/pipenv
      inputs:
        - name: concourse-demo-acceptance-tests
      params:
        ENDPOINT: 'http://concourse-demo-python.apps.devtest.onsclofo.uk'
      run:
        path: sh
        dir: concourse-demo-acceptance-tests
        args:
        - -exc
        - |
          pipenv install
          pipenv run behave

- name: deploy-python-demo-int
  plan:
  - get: concourse-demo-python-service
    passed: [acceptance-tests]
    trigger: true
  - put: cf-resource-int
    params:
      manifest: concourse-demo-python-service/manifest.yml
      path: concourse-demo-python-service
      current_app_name: concourse-demo-python-service-int

- name: deploy-java-demo-int
  plan:
  - get: concourse-demo-java-service
    trigger: true
    passed: [acceptance-tests]
  - task: run-build
    file: concourse-demo-java-service/ci/task.yml
  - put: cf-resource-int
    params:
      manifest: concourse-demo-java-service/manifest.yml
      path: artifacts/*.jar
      current_app_name: concourse-demo-java-service-int

- name: deploy-python-demo-preprod
  disable_manual_trigger: true
  plan:
  - get: concourse-demo-python-service
    passed: [deploy-python-demo-int]
  - get: concourse-demo-preprod-deploy-trigger
    trigger: true
  - put: concourse-demo-python-tag
    params: {bump: minor}
  - task: run-build
    file: concourse-demo-python-service/ci/task.yml
  - put: cf-resource-sit
    params:
      manifest: concourse-demo-python-service/manifest.yml
      path: concourse-demo-python-service
      current_app_name: concourse-demo-python-service-preprod

- name: deploy-java-demo-preprod
  disable_manual_trigger: true
  plan:
  - get: concourse-demo-java-service
    passed: [deploy-java-demo-int]
  - get: concourse-demo-preprod-deploy-trigger
    trigger: true
  - task: run-build
    file: concourse-demo-java-service/ci/task.yml
  - put: concourse-demo-java-tag
    params: {bump: minor}
  - put: file-repository
    params: {file: "artifacts/*.jar"}
  - put: cf-resource-sit
    params:
      manifest: concourse-demo-java-service/manifest.yml
      path: artifacts/*.jar
      current_app_name: concourse-demo-java-service-sit

- name: deploy-python-demo-prod
  disable_manual_trigger: true
  plan:
  - get: concourse-demo-python-service
    passed: [deploy-python-demo-preprod]
  - get: concourse-demo-prod-deploy-trigger
    trigger: true
  - put: cf-resource-cat
    params:
      manifest: concourse-demo-python-service/manifest.yml
      path: concourse-demo-python-service
      current_app_name: concourse-demo-python-service-prod

- name: deploy-java-demo-prod
  disable_manual_trigger: true
  plan:
  - get: concourse-demo-java-service
    passed: [deploy-java-demo-preprod]
  - get: file-repository
    passed: [deploy-java-demo-preprod]
  - get: concourse-demo-prod-deploy-trigger
    trigger: true
  - put: cf-resource-cat
    params:
      manifest: concourse-demo-java-service/manifest.yml
      path: file-repository/*.jar
      current_app_name: concourse-demo-java-service-prod
